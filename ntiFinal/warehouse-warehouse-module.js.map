{"version":3,"sources":["./src/app/dashboard/warehouse/warehouse-routing.module.ts","./src/app/dashboard/warehouse/warehouse.module.ts","./src/app/dashboard/warehouse/warehouse-dashboard/warehouse-dashboard.component.ts","./src/app/dashboard/warehouse/warehouse-dashboard/warehouse-dashboard.component.html","./src/app/dashboard/warehouse/warehouse-monitor-list/warehouse-monitor-list.component.html","./src/app/dashboard/warehouse/warehouse-monitor-list/warehouse-monitor-list.component.ts","./src/app/dashboard/warehouse/warehouse-monitor-item/warehouse-monitor-item.component.html","./src/app/dashboard/warehouse/warehouse-monitor-item/warehouse-monitor-item.component.ts"],"names":[],"mappings":"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","file":"warehouse-warehouse-module.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { WarehouseDashboardComponent } from './warehouse-dashboard/warehouse-dashboard.component';\r\nimport { WarehouseMonitorListComponent } from './warehouse-monitor-list/warehouse-monitor-list.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: WarehouseDashboardComponent },\r\n  { path: 'orders-wait', component: WarehouseMonitorListComponent },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class WarehouseRoutingModule {}\r\n","import { SharedModule } from 'src/app/shared/shared.module';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { WarehouseMonitorListComponent } from './warehouse-monitor-list/warehouse-monitor-list.component';\nimport { WarehouseDashboardComponent } from './warehouse-dashboard/warehouse-dashboard.component';\nimport { WarehouseRoutingModule } from './warehouse-routing.module';\nimport { WarehouseMonitorItemComponent } from './warehouse-monitor-item/warehouse-monitor-item.component';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatTableModule } from '@angular/material/table';\n\n@NgModule({\n  declarations: [\n    WarehouseMonitorListComponent,\n    WarehouseDashboardComponent,\n    WarehouseMonitorItemComponent,\n  ],\n  imports: [\n    CommonModule,\n    SharedModule,\n    WarehouseRoutingModule,\n    MatExpansionModule,\n    MatButtonModule,\n    MatTableModule,\n  ],\n})\nexport class WarehouseModule {}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-warehouse-dashboard',\n  templateUrl: './warehouse-dashboard.component.html',\n  styleUrls: ['./warehouse-dashboard.component.scss'],\n})\nexport class WarehouseDashboardComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n","<div class=\"mt-5\">\n  <a routerLink=\"orders-wait\">Заказы к отгрузке</a>\n</div>\n","<div class=\"mt-5\" *ngFor=\"let order of orders\" [ngSwitch]=\"order.order.status\">\n  <div *ngSwitchCase=\"'Ожидает погрузки склад 1'\">\n    <h5>СКЛАД №1</h5>\n    <app-warehouse-monitor-item [orders]=\"order\"></app-warehouse-monitor-item>\n  </div>\n  <div *ngSwitchCase=\"'Ожидает погрузки склад 2'\">\n    <h5>СКЛАД №2</h5>\n    <app-warehouse-monitor-item [orders]=\"order\"></app-warehouse-monitor-item>\n  </div>\n  <div *ngSwitchCase=\"'Ожидает погрузки склад 3'\">\n    <h5>СКЛАД №3</h5>\n    <app-warehouse-monitor-item [orders]=\"order\"></app-warehouse-monitor-item>\n  </div>\n  <div *ngSwitchCase=\"'Ожидает погрузки склад 4'\">\n    <h5>СКЛАД №4</h5>\n    <app-warehouse-monitor-item [orders]=\"order\"></app-warehouse-monitor-item>\n  </div>\n  <div *ngSwitchCase=\"'Ожидает погрузки склад 5'\">\n    <h5>СКЛАД №5</h5>\n    <app-warehouse-monitor-item [orders]=\"order\"></app-warehouse-monitor-item>\n  </div>\n  <div *ngSwitchCase=\"'Ожидает погрузки склад 6'\">\n    <h5>СКЛАД №6</h5>\n    <app-warehouse-monitor-item [orders]=\"order\"></app-warehouse-monitor-item>\n  </div>\n</div>","import { OrderService } from 'src/app/services/order.service';\nimport { Component, OnInit } from '@angular/core';\nimport { Order } from 'src/app/models/order';\n\n@Component({\n  selector: 'app-warehouse-monitor-list',\n  templateUrl: './warehouse-monitor-list.component.html',\n  styleUrls: ['./warehouse-monitor-list.component.scss'],\n})\nexport class WarehouseMonitorListComponent implements OnInit {\n  orders: any[] = [];\n\n  constructor(private orderService: OrderService) {}\n\n  ngOnInit(): void {\n    this.getOrders();\n  }\n\n  getOrders() {\n    let sub = this.orderService.getAllOrdersId().subscribe((items) => {\n      items.map((i) => {\n        if (\n          i.order.status == 'Ожидает погрузки склад 1' ||\n          i.order.status == 'Ожидает погрузки склад 2' ||\n          i.order.status == 'Ожидает погрузки склад 3' ||\n          i.order.status == 'Ожидает погрузки склад 4' ||\n          i.order.status == 'Ожидает погрузки склад 5' ||\n          i.order.status == 'Ожидает погрузки склад 6' ||\n          i.order.status == 'Загружен на складе 1' ||\n          i.order.status == 'Загружен на складе 2' ||\n          i.order.status == 'Загружен на складе 3' ||\n          i.order.status == 'Загружен на складе 4' ||\n          i.order.status == 'Загружен на складе 5' ||\n          i.order.status == 'Загружен на складе 6'\n        ) {\n          this.orders.push(i);\n        }\n      });\n      console.log(this.orders);\n      sub.unsubscribe();\n    });\n  }\n}\n","<mat-accordion *ngIf=\"orders\">\n  <mat-expansion-panel class=\"mb-3\">\n    <mat-expansion-panel-header>\n      <mat-panel-title>\n        Заказ № <b> {{ orders.id }} </b>\n      </mat-panel-title>\n\n      <mat-panel-description>\n        <span *ngIf=\"orders.order.status == 'Доставлен'\"> Доставлен </span>\n      </mat-panel-description>\n    </mat-expansion-panel-header>\n    <b> СТАТУC: </b>{{ orders.order.status }} <br />\n    <b> Дата/время прибытия к базе: </b\n    >{{ orders.order.shipDetails.date | date: \"medium\" }}\n\n    <table\n      mat-table\n      [dataSource]=\"orders.order.items\"\n      class=\"mt-3 mat-elevation-z8\"\n    >\n      <ng-container matColumnDef=\"Склад\">\n        <th mat-header-cell *matHeaderCellDef>Склад</th>\n        <td mat-cell *matCellDef=\"let itemsToShip\">\n          {{ itemsToShip.warehouse }}\n        </td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"ШК\">\n        <th mat-header-cell *matHeaderCellDef>Штрихкод</th>\n        <td mat-cell *matCellDef=\"let itemsToShip\">\n          {{ itemsToShip.barcode }}\n        </td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"Номенклатура\">\n        <th mat-header-cell *matHeaderCellDef>Номенклатура</th>\n        <td mat-cell *matCellDef=\"let itemsToShip\">\n          {{ itemsToShip.itemUid.name }}\n        </td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"Количество\">\n        <th mat-header-cell *matHeaderCellDef>Количество, тонн</th>\n        <td mat-cell *matCellDef=\"let itemsToShip\">{{ itemsToShip.count }}</td>\n      </ng-container>\n\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n      <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\n    </table>\n\n    <div *ngIf=\"this.userRole == 'warehouse'\">\n      <h4 class=\"mt-3 mb-1 text-center\">Сменить статус заказа</h4>\n      <div class=\"example-button-row mt-3\">\n        <div *ngFor=\"let item of orders.order.items\" class=\"d-inline\">\n          <button\n            class=\"ml-3\"\n            mat-raised-button\n            color=\"warn\"\n            (click)=\"changeStatus(orders.id, item.warehouse)\"\n            [disabled]=\"\n              orders.order.status == 'Загружен на складе ' + item.warehouse\n            \"\n          >\n            Загружен на складе {{ item.warehouse }}\n          </button>\n        </div>\n      </div>\n    </div>\n  </mat-expansion-panel>\n</mat-accordion>\n","import { Component, Input, OnInit } from '@angular/core';\nimport { Order } from 'src/app/models/order';\nimport { OrderService } from 'src/app/services/order.service';\n\n@Component({\n  selector: 'app-warehouse-monitor-item',\n  templateUrl: './warehouse-monitor-item.component.html',\n  styleUrls: ['./warehouse-monitor-item.component.scss'],\n})\nexport class WarehouseMonitorItemComponent implements OnInit {\n  @Input() orders: Order;\n  displayedColumns: string[] = ['Склад', 'ШК', 'Номенклатура', 'Количество'];\n\n  constructor(private orderService: OrderService) {}\n  userRole: string;\n\n  ngOnInit(): void {\n    this.userRole = localStorage.getItem('role');\n  }\n\n  changeStatus(id: string, status: number) {\n    let str = `Загружен на складе ${status}`;\n    this.orderService.changeOrderStatus(id, str);\n  }\n}\n"],"sourceRoot":"webpack:///"}