{"version":3,"sources":["./src/app/dashboard/client/order-final-info/order-final-info.component.ts","./src/app/dashboard/client/order-final-info/order-final-info.component.html","./src/app/dashboard/client/client-dashboard/client-dashboard.component.ts","./src/app/dashboard/client/client-dashboard/client-dashboard.component.html","./src/app/dashboard/client/client-routing.module.ts","./src/app/dashboard/client/client-orders/client-orders.component.html","./src/app/dashboard/client/client-orders/client-orders.component.ts","./src/app/dashboard/client/client-layout/client-layout.component.ts","./src/app/dashboard/client/order-item/order-item.component.html","./src/app/dashboard/client/order-item/order-item.component.ts","./src/app/dashboard/client/choose-barcodes/choose-barcodes.component.ts","./src/app/dashboard/client/choose-barcodes/choose-barcodes.component.html","./src/app/services/items.service.ts","./src/app/services/barcodes.service.ts","./src/app/dashboard/client/place-order/place-order.component.html","./src/app/dashboard/client/place-order/place-order.component.ts","./src/app/dashboard/client/cargo-time/cargo-time.component.html","./src/app/dashboard/client/cargo-time/cargo-time.component.ts","./src/app/dashboard/client/client.module.ts"],"names":[],"mappings":"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","file":"client-client-module.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Barcode } from 'src/app/models/barcode';\nimport { OrderService } from 'src/app/services/order.service';\n\n@Component({\n  selector: 'app-order-final-info',\n  templateUrl: './order-final-info.component.html',\n  styleUrls: ['./order-final-info.component.scss'],\n})\nexport class OrderFinalInfoComponent implements OnInit {\n  constructor(private orderService: OrderService) {}\n\n  itemsToShip: Barcode[];\n  shipDetails: any;\n  driverInfo: [] = [];\n\n  ngOnInit(): void {\n    this.itemsToShip = JSON.parse(localStorage.getItem('itemsToShip'));\n    this.shipDetails = JSON.parse(localStorage.getItem('shipDetails'));\n    this.driverInfo = this.shipDetails.driver;\n  }\n\n  submitOrder() {\n    let order = {\n      items: this.itemsToShip,\n      shipDetails: this.shipDetails,\n      status: 'Новый',\n    };\n    this.orderService.placeOrder(order);\n    localStorage.removeItem('shipDetails');\n    localStorage.removeItem('item');\n    localStorage.removeItem('itemsToShip');\n    localStorage.removeItem('items');\n  }\n}\n","<h3 class=\"mt-5\">Итоговый заказ</h3>\r\n\r\n<h4 class=\"mt-4\">Выбранный товар к отгрузке</h4>\r\n<app-barcode-item [dataSource]=\"this.itemsToShip\">\r\n\r\n</app-barcode-item>\r\n\r\n<!-- подробсти даты доставки -->\r\n<h4 class=\"mt-4\">Дата/время отгрузки</h4>\r\n<div>{{ shipDetails.date | date: \"medium\" }}</div>\r\n\r\n<!-- данные о видителе -->\r\n\r\n<h4 class=\"mt-4\">Данные о водителе</h4>\r\n<div>\r\n  <b>ФИО: </b>\r\n  {{ shipDetails.driver.info }}\r\n</div>\r\n<div>\r\n  <b>Номер телефона: </b>\r\n  {{ shipDetails.driver.phone }}\r\n</div>\r\n<div>\r\n  <b>Грузоподъемность автомобиля: </b> {{ shipDetails.driver.car }}, тонн\r\n</div>\r\n\r\n<button class=\"mt-2\" mat-raised-button color=\"primary\" (click)=\"submitOrder()\">\r\n  Сформировать заказ\r\n</button>\r\n","import { AuthService } from '../../../services/auth.service';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-client-dashboard',\n  templateUrl: './client-dashboard.component.html',\n  styleUrls: ['./client-dashboard.component.scss'],\n})\nexport class ClientDashboardComponent implements OnInit {\n  constructor(public authService: AuthService) {}\n\n  ngOnInit(): void {}\n}\n","<div class=\"mt-5\">\r\n  <a routerLink=\"place-order\">Разметить заказ на отгрузку</a>\r\n</div>\r\n<div>\r\n  <a routerLink=\"orders\">Просмотр моих заказов на отгрузку</a>\r\n</div>\r\n\r\n<div>\r\n  <a routerLink=\"/dashboard/account-info\">Данные учетной записи</a>\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { AuthGuard } from 'src/app/auth.guard';\r\nimport { CargoTimeComponent } from './cargo-time/cargo-time.component';\r\nimport { ChooseBarcodesComponent } from './choose-barcodes/choose-barcodes.component';\r\nimport { ClientDashboardComponent } from './client-dashboard/client-dashboard.component';\r\nimport { ClientOrdersComponent } from './client-orders/client-orders.component';\r\nimport { OrderFinalInfoComponent } from './order-final-info/order-final-info.component';\r\nimport { OrderItemComponent } from './order-item/order-item.component';\r\nimport { PlaceOrderComponent } from './place-order/place-order.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: ClientDashboardComponent,\r\n  },\r\n  {\r\n    path: 'place-order',\r\n    component: PlaceOrderComponent,\r\n  },\r\n  {\r\n    path: 'choose-barcodes',\r\n    component: ChooseBarcodesComponent,\r\n  },\r\n  {\r\n    path: 'cargo-time',\r\n    component: CargoTimeComponent,\r\n    canActivate: [AuthGuard],\r\n  },\r\n  {\r\n    path: 'check-order',\r\n    component: OrderFinalInfoComponent,\r\n    canActivate: [AuthGuard],\r\n  },\r\n  {\r\n    path: 'orders',\r\n    component: ClientOrdersComponent,\r\n    canActivate: [AuthGuard],\r\n  },\r\n  {\r\n    path: 'orders/order/:id',\r\n    component: OrderItemComponent,\r\n    canActivate: [AuthGuard],\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class ClientRoutingModule {}\r\n","<h3 class=\"mt-5\">Мои заказы</h3>\n<div *ngIf=\"orderIds; else loading\">\n  <div *ngIf=\"orderIds.length; else empty\">\n    <li\n      style=\"font-size: 18px\"\n      class=\"text-left mb-1\"\n      *ngFor=\"let order of orderIds\"\n    >\n      Заказ <a routerLink=\"/dashboard/client/orders/order/{{ order }}\"> №{{ order }} </a>\n    </li>\n  </div>\n</div>\n\n<ng-template #loading> Загрузка...</ng-template>\n<ng-template #empty> Вы еще не заказывали доставки </ng-template>\n","import { OrderService } from 'src/app/services/order.service';\nimport { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-client-orders',\n  templateUrl: './client-orders.component.html',\n  styleUrls: ['./client-orders.component.scss'],\n})\nexport class ClientOrdersComponent implements OnInit {\n  constructor(private orderService: OrderService, private router: Router) {}\n\n  orderIds: any[];\n\n  ngOnInit(): void {\n    const data = JSON.parse(localStorage.getItem('user'));\n    const id = data.uid;\n    this.getOrders(id);\n  }\n\n  getOrders(id) {\n    this.orderService.getUserOrdersList(id).subscribe((data) => {\n      this.orderIds = data.orders;\n    });\n  }\n\n  openItem(orderId) {\n    this.router.navigate([`/order/${orderId}`]);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from '../../../services/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-client-layout',\r\n  templateUrl: './client-layout.component.html',\r\n  styleUrls: ['./client-layout.component.css'],\r\n})\r\nexport class ClientLayoutComponent implements OnInit {\r\n  // constructor(public authService: AuthService) {}\r\n  // role: string;\r\n  ngOnInit(): void {\r\n  //   if (this.authService.userRole == 'client') {\r\n  //     this.role = 'Клиент';\r\n  //   } else {\r\n  //     this.role = 'Водитель';\r\n  //   }\r\n  }\r\n\r\n  // logout() {\r\n  //   this.authService.logout();\r\n  // }\r\n}\r\n","<h4 class=\"mt-4\">Заказ номер №{{ id }}</h4>\r\n<hr />\r\n<div *ngIf=\"order; else loading\">\r\n  <div class=\"mt-2 mb-2\"><b>СТАТУС: </b> {{ order.order.status }}</div>\r\n\r\n  <app-barcode-item [dataSource]=\"dataSource\"></app-barcode-item>\r\n\r\n  <!-- подробсти даты доставки -->\r\n  <h4 class=\"mt-4\">Дата/время отгрузки</h4>\r\n  <div>{{ order.order.shipDetails.date | date: \"medium\" }}</div>\r\n\r\n  <!-- данные о видителе -->\r\n\r\n  <h4 class=\"mt-4\">Данные о водителе</h4>\r\n  <div>\r\n    <b>ФИО: </b>\r\n    {{ order.order.shipDetails.driver.info }}\r\n  </div>\r\n  <div>\r\n    <b>Номер телефона: </b>\r\n    {{ order.order.shipDetails.driver.phone }}\r\n  </div>\r\n  <div>\r\n    <b>Грузоподъемность автомобиля: </b>\r\n    {{ order.order.shipDetails.driver.car }}, тонн\r\n  </div>\r\n</div>\r\n\r\n<ng-template #loading>Загрузка... <br /> </ng-template>\r\n\r\n<button class=\"mt-4\" mat-raised-button (click)=\"goBack()\">\r\n  К списку заказов\r\n</button>\r\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { OrderService } from 'src/app/services/order.service';\nimport { Location } from '@angular/common';\nimport { Order } from 'src/app/models/order';\nimport { Barcode } from 'src/app/models/barcode';\n\n@Component({\n  selector: 'app-order-item',\n  templateUrl: './order-item.component.html',\n  styleUrls: ['./order-item.component.scss'],\n})\nexport class OrderItemComponent implements OnInit {\n  constructor(\n    private orderService: OrderService,\n    private activatedRoute: ActivatedRoute,\n    private location: Location\n  ) {}\n\n  order: Order;\n  id: string;\n  dataSource: Barcode[];\n  ngOnInit(): void {\n    this.getItem();\n  }\n\n  getItem() {\n    this.id = this.activatedRoute.snapshot.params['id'];\n    this.orderService.getOrderById(this.id).subscribe((item) => {\n      this.order = item;\n      this.dataSource = this.order.order.items;\n    });\n  }\n\n  goBack(): void {\n    this.location.back();\n  }\n}\n","import { BarcodesService } from '../../../services/barcodes.service';\nimport { Component, OnInit } from '@angular/core';\nimport { Barcode } from 'src/app/models/barcode';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { MatListOption } from '@angular/material/list';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-choose-barcodes',\n  templateUrl: './choose-barcodes.component.html',\n  styleUrls: ['./choose-barcodes.component.scss'],\n})\nexport class ChooseBarcodesComponent implements OnInit {\n  constructor(\n    public barcodesService: BarcodesService,\n    private router: Router\n  ) {}\n\n  codes: [];\n  barcodeItems: Barcode[] = [];\n  displayedColumns: string[] = [\n    'ШК',\n    'Номенклатура',\n    'Склад',\n    'Количество',\n    'Ед.изм',\n  ];\n  dataSource: any;\n  selectedOption: Barcode[];\n\n  ngOnInit(): void {\n    this.codes = JSON.parse(localStorage.getItem('items'));\n    this.getBarcodes();\n  }\n\n  getBarcodes() {\n    this.codes.forEach((el) => {\n      let sub = this.barcodesService\n        .getSelectedBarcodes(el)\n        .subscribe((item) => {\n          console.log(item);\n\n          item.forEach((element) => {\n            this.barcodeItems.push(element);\n          });\n          sub.unsubscribe();\n\n          this.dataSource = new MatTableDataSource(item);\n        });\n    });\n  }\n\n  onGroupsChange(options: MatListOption[]) {\n    this.selectedOption = options.map((o) => o.value);\n    this.setSelectedItemsToLocalStorage();\n  }\n\n  setSelectedItemsToLocalStorage() {\n    localStorage.setItem('itemsToShip', JSON.stringify(this.selectedOption));\n  }\n\n  chooseCargoTime() {\n    this.router.navigate(['/dashboard/client/cargo-time']);\n  }\n}\n","<h3 class=\"mt-5\">Выберите варианты к отгрузке</h3>\n<mat-selection-list\n  #shoes\n  (selectionChange)=\"onGroupsChange(shoes.selectedOptions.selected)\"\n>\n  <mat-list-option *ngFor=\"let c of barcodeItems\" [value]=\"c\">\n    <div [ngSwitch]=\"c.warehouse\">\n      <div *ngSwitchCase=\"1\"><b>СКЛАД: </b>Склад 1</div>\n      <div *ngSwitchCase=\"2\"><b>СКЛАД: </b>Склад 2</div>\n      <div *ngSwitchCase=\"3\"><b>СКЛАД: </b>Склад 3</div>\n      <div *ngSwitchCase=\"4\"><b>СКЛАД: </b>Склад 4</div>\n      <div *ngSwitchCase=\"5\"><b>СКЛАД: </b>Склад 5</div>\n      <div *ngSwitchCase=\"6\"><b>СКЛАД: </b>Склад 6</div>\n    </div>\n    <div><b>ШК: </b> {{ c?.barcode }}</div>\n    <div><b>НОМЕНКЛАТУРА: </b> {{ c?.itemUid?.name }}</div>\n    <div><b>КОЛИЧЕСТВО: </b> {{ c.count }}, {{ c?.itemUid?.unit }}</div>\n    <hr class=\"mt-2\" />\n  </mat-list-option>\n</mat-selection-list>\n\n<button\n  *ngIf=\"selectedOption?.length\"\n  mat-raised-button\n  color=\"accent\"\n  class=\"mt-3\"\n  (click)=\"chooseCargoTime()\"\n>\n  Далее\n</button>\n","import { Item } from './../models/item';\nimport { Injectable } from '@angular/core';\nimport {\n  AngularFirestore,\n  AngularFirestoreCollection,\n} from '@angular/fire/firestore';\n\nimport { Observable } from 'rxjs';\nimport { map, switchMap } from 'rxjs/operators';\nimport { AlertService } from './alert.service';\nimport { Router } from '@angular/router';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ItemsService {\n  itemsCollectionRef: AngularFirestoreCollection<Item>;\n  items: Observable<Item[]>;\n\n  constructor(\n    private afs: AngularFirestore,\n    private alert: AlertService,\n    private router: Router\n  ) {\n    this.itemsCollectionRef = this.afs.collection('items');\n    this.items = this.itemsCollectionRef.snapshotChanges().pipe(\n      map((data) =>\n        data.map((a) => {\n          const data = a.payload.doc.data() as Item;\n          const id = a.payload.doc.id;\n          return { id, ...data };\n        })\n      )\n    );\n  }\n\n  getItems() {\n    return this.items;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {\n  AngularFirestore,\n  AngularFirestoreCollection,\n  DocumentReference,\n} from '@angular/fire/firestore';\n\nimport firebase from 'firebase/app';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { User } from '../models/user';\nimport { AlertService } from './alert.service';\nimport { Router } from '@angular/router';\nimport { Barcode } from '../models/barcode';\nimport { Item } from '../models/item';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class BarcodesService {\n  constructor(private afs: AngularFirestore) {}\n\n  getSelectedBarcodes(id): Observable<Barcode[]> {\n    const queryReference = this.afs.collection('items').doc(id).ref;\n    const collectionRef = this.afs.collection('barcodes', (code) =>\n      code.where('itemUid', '==', queryReference)\n    );\n    const result$ = collectionRef.snapshotChanges().pipe(\n      map((data) =>\n        data.map((a) => {\n          const data = a.payload.doc.data() as Barcode;\n          return data;\n        })\n      ),\n      map((data) => {\n        data.map((a) => {\n          const itemDoc = this.afs.doc(a.itemUid.path);\n          const itemData$ = itemDoc.snapshotChanges().pipe(\n            map((data) => {\n              return data.payload.data() as Item;\n            })\n          );\n          itemData$.subscribe((i) => {\n            a.itemUid = i;\n          });\n          const item = a.itemUid as Item;\n          return item;\n        });\n        return data;\n      })\n    );\n    return result$;\n  }\n}\n","<div *ngIf=\"this.items; else loading\" class=\"mt-5\">\n  <label for=\"items\">Выберите интересующую номенклатуру</label>\n  <mat-form-field id=\"items\">\n    <mat-label>Номенклатура</mat-label>\n    <mat-select (selectionChange)=\"values($event)\" multiple>\n      <mat-option *ngFor=\"let item of items\" [value]=\"item.uid\">\n        {{ item.name }}\n      </mat-option>\n    </mat-select>\n  </mat-form-field>\n\n  <mat-list *ngIf=\"selectedItems?.length\">\n    Артикулы выбранной номенклатуры\n    <mat-list-item *ngFor=\"let item of selectedItems\">\n      {{ item }}\n    </mat-list-item>\n  </mat-list>\n\n  <button\n    *ngIf=\"selectedItems?.length\"\n    mat-raised-button\n    color=\"accent\"\n    (click)=\"submitSelected()\"\n  >\n    Далее\n  </button>\n</div>\n\n<ng-template #loading>\n  <p class=\"mt-5\">Загрузка номенклатуры...</p>\n</ng-template>\n","import { Router } from '@angular/router';\nimport { Component, OnInit } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { MatSelectChange } from '@angular/material/select';\nimport { Item } from 'src/app/models/item';\nimport { ItemsService } from 'src/app/services/items.service';\n\n@Component({\n  selector: 'app-place-order',\n  templateUrl: './place-order.component.html',\n  styleUrls: ['./place-order.component.scss'],\n})\nexport class PlaceOrderComponent implements OnInit {\n  constructor(private itemsService: ItemsService, private router: Router) {}\n\n  items: Item[];\n  selectedItems: [];\n\n  ngOnInit(): void {\n    localStorage.removeItem('items');\n    this.getItems();\n  }\n\n  getItems() {\n    let sub = this.itemsService.getItems().subscribe((item) => {\n      this.items = item;\n    });\n  }\n\n  values(event: MatSelectChange) {\n    this.selectedItems = event.value;\n    if (!this.selectedItems.length) {\n      localStorage.removeItem('items');\n    } else {\n      localStorage.setItem('items', JSON.stringify(this.selectedItems));\n    }\n  }\n\n  submitSelected() {\n    this.router.navigate(['/dashboard/client/choose-barcodes']);\n  }\n}\n","<h3 class=\"mt-5\">Забронировать время приезда автомобиля на базу</h3>\r\n\r\n<form>\r\n  <input type=\"date\" (change)=\"onDateChange($event.target.value)\" />\r\n  <input type=\"time\" (change)=\"onTimeChange($event.target.value)\" />\r\n</form>\r\n<h4 *ngIf=\"selectedDate\" class=\"mt-4\">Выбранная дата</h4>\r\n{{ selectedDate | date: \"medium\" }}\r\n\r\n<hr />\r\n\r\n<h4 class=\"mt-4\">Данные водителя</h4>\r\n\r\n<label for=\"driverInfo\">ФИО водителя</label>\r\n<input\r\n  class=\"form-control\"\r\n  type=\"text\"\r\n  id=\"driverInfo\"\r\n  [(ngModel)]=\"info\"\r\n  name=\"info\"\r\n/>\r\n<label for=\"driverInfo\">ID водителя в системе</label>\r\n<input\r\n  class=\"form-control\"\r\n  type=\"string\"\r\n  id=\"driverCar\"\r\n  [(ngModel)]=\"id\"\r\n  name=\"uid\"\r\n/>\r\n<label for=\"driverPhone\">Номер телефона</label>\r\n<input\r\n  class=\"form-control\"\r\n  type=\"number\"\r\n  id=\"driverPhone\"\r\n  [(ngModel)]=\"phone\"\r\n  name=\"phone\"\r\n/>\r\n<label for=\"driverInfo\">Грузоподъемность автомобиля, тонн</label>\r\n<input\r\n  class=\"form-control\"\r\n  type=\"number\"\r\n  id=\"driverCar\"\r\n  [(ngModel)]=\"car\"\r\n  name=\"car\"\r\n/>\r\n\r\n<button\r\n  [disabled]=\"\r\n    !this.car || !this.phone || !this.info || !this.selectedDate || !this.id\r\n  \"\r\n  class=\"mt-4\"\r\n  mat-raised-button\r\n  color=\"accent\"\r\n  (click)=\"watchOrder()\"\r\n>\r\n  Просмотр заказа\r\n</button>\r\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-cargo-time',\n  templateUrl: './cargo-time.component.html',\n  styleUrls: ['./cargo-time.component.scss'],\n})\nexport class CargoTimeComponent implements OnInit {\n  constructor(private router: Router) {}\n\n  id: string;\n  info: string;\n  phone: number;\n  car: number;\n\n  ngOnInit(): void {}\n  selectedDate: string;\n  selectedTime: string;\n\n  onDateChange(val) {\n    this.selectedDate = val;\n  }\n\n  onTimeChange(val) {\n    this.selectedTime = val;\n  }\n\n  watchOrder() {\n    let shipDetails = {\n      driver: {\n        driverUid: this.id,\n        info: this.info,\n        phone: this.phone,\n        car: this.car,\n      },\n      date: this.selectedDate,\n      time: this.selectedTime,\n    };\n    console.log(shipDetails);\n    localStorage.setItem('shipDetails', JSON.stringify(shipDetails));\n    this.router.navigate(['dashboard/client/check-order']);\n  }\n}\n","\r\nimport { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatExpansionModule } from '@angular/material/expansion';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { SharedModule } from 'src/app/shared/shared.module';\r\nimport { CargoTimeComponent } from './cargo-time/cargo-time.component';\r\nimport { ChooseBarcodesComponent } from './choose-barcodes/choose-barcodes.component';\r\nimport { ClientDashboardComponent } from './client-dashboard/client-dashboard.component';\r\nimport { ClientLayoutComponent } from './client-layout/client-layout.component';\r\nimport { ClientOrdersComponent } from './client-orders/client-orders.component';\r\nimport { ClientRoutingModule } from './client-routing.module';\r\nimport { OrderFinalInfoComponent } from './order-final-info/order-final-info.component';\r\nimport { OrderItemComponent } from './order-item/order-item.component';\r\nimport { PlaceOrderComponent } from './place-order/place-order.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ClientLayoutComponent,\r\n    ClientDashboardComponent,\r\n    PlaceOrderComponent,\r\n    ChooseBarcodesComponent,\r\n    CargoTimeComponent,\r\n    OrderFinalInfoComponent,\r\n    ClientOrdersComponent,\r\n    OrderItemComponent,\r\n  ],\r\n  imports: [\r\n    FormsModule,\r\n    CommonModule,\r\n    ReactiveFormsModule,\r\n    SharedModule,\r\n    MatListModule,\r\n    ClientRoutingModule,\r\n    MatSelectModule,\r\n    MatButtonModule,\r\n    MatTableModule,\r\n    MatDatepickerModule,\r\n    MatExpansionModule,\r\n  ],\r\n  providers: [],\r\n  bootstrap: [],\r\n})\r\nexport class ClientModule {}\r\n"],"sourceRoot":"webpack:///"}