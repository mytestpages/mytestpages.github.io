{"version":3,"sources":["./src/app/services/alert.service.ts","./src/app/login-form/login-form.component.html","./src/app/login-form/login-form.component.ts","./src/environments/environment.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/services/auth.service.ts","./src/app/page-not-found/page-not-found.component.ts","./src/app/page-not-found/page-not-found.component.html","./src/app/auth.guard.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { NotificationsService } from 'angular2-notifications';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AlertService {\n\n  constructor(private notify: NotificationsService) { }\n\n  success(about){\n    this.notify.success(\"Успех\", about, {\n      timeOut: 2000,\n      position:[\"bottom\", \"right\"]\n    })\n  }\n\n  error(about){\n    this.notify.error(\"Ошибка\", about, {\n      timeOut: 2000,\n      position:[\"bottom\", \"right\"]\n    })\n  }\n\n  changeStatusInfo(title, status){\n    this.notify.info(title, `Статус изменен на: ${status}`, {\n      timeOut: 3500,\n      position:[\"bottom\", \"right\"]\n    })\n\n  }\n\n\n}\n","<nav class=\"navbar navbar-dark bg-dark navbar-expand-lg\">\n  <div class=\"container\">\n    <p class=\"navbar-brand\">MS Logistics </p>\n    <ul class=\"navbar-nav\">\n      <li class=\"nav-item\" *ngIf=\"!this.authService.isAuth\">\n        <a ngif class=\"nav-link\" routerLinkActive=\"active\" routerLink=\"/login\">Войти в аккаунт</a>\n      </li>\n    </ul>\n  </div>\n</nav>\n\n  <div class=\"col-md-6 ml-auto mr-auto text-left\">\n    <h3 class=\"text-center mb-3\">Форма входа</h3>\n    <div class=\"container text-center\">\n      <div class=\"alert alert-danger\" *ngIf=\"message\">\n        {{message}}\n      </div>\n      <div class=\"form-group\">\n        <label class=\"form-label\" for=\"email_input\">Email:</label>\n        <input [(ngModel)]=\"this.email\" class=\"form-control\" type=\"email\" name=\"email\" #userEmail=\"ngModel\" required\n          id=\"email_input\">\n        <small [hidden]=\"userEmail.valid || userEmail.untouched\">\n          Введите логин\n        </small>\n      </div>\n      <div class=\"form-group\">\n        <label for=\"password_input\">Пароль:</label>\n        <input [(ngModel)]=\"this.password\" class=\"form-control\" type=\"password\" name=\"password\" #userPassword=\"ngModel\"\n          required id=\"password_input\">\n        <small [hidden]=\"userPassword.valid || userPassword.untouched\">\n          Введите пароль\n        </small>\n      </div>\n\n      <div class=\"row text-left mt-5\">\n        <div class=\"col-6\">\n          <h6 class=\"mb-2\">Предопределенные учетные записи</h6>\n          <button (click)=\"signIn('customer@customer.cm', 'customer@customer.cm')\" class=\"mb-2 btn btn-primary\" style=\"margin-left:5px;\">Войти как клиент</button> <br>\n          <button (click)=\"signIn('manager@manager.mg','manager@manager.mg')\" class=\"mb-2 btn btn-primary\"\n            style=\"margin-left:5px;\">Войти как менеджер</button><br>\n          <button (click)=\"signIn('warehouse@warehouse.wh', 'warehouse@warehouse.wh')\" class=\"mb-2 btn btn-primary\"\n            style=\"margin-left:5px;\">Войти как складской рабочий</button><br>\n          <button (click)=\"signIn('courier@courier.cr', 'courier@courier.cr')\" class=\"mb-2 btn btn-primary\"\n            style=\"margin-left:5px;\">Войти как курьер</button><br>\n        </div>\n        <div class=\"col-6\">\n          <h6 class=\"mb-2\">Создать и войти через свой профиль (как клиент)</h6>\n          <button [disabled]=\"userEmail.invalid || userPassword.invalid\" (click)=\"signIn()\" class=\"mb-2 btn btn-primary\"\n            style=\"margin-left:5px;\">Войти</button><br>\n          <button [disabled]=\"userEmail.invalid || userPassword.invalid\" (click)=\"signUp()\"\n            class=\"btn btn-success\">Зарегистрироваться</button>\n        </div>\n      </div>\n    </div>\n\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Params } from '@angular/router';\nimport { AuthService } from '../services/auth.service';\n\n@Component({\n  selector: 'app-login-form',\n  templateUrl: './login-form.component.html',\n  styles: [\n  ]\n})\n\nexport class LoginFormComponent implements OnInit {\n\n  email:string;\n  password:string;\n  message:string;\n\n  constructor(public authService:AuthService, private route:ActivatedRoute\n    ) { }\n\n  ngOnInit(): void {\n    this.route.queryParams.subscribe((params:Params)=>{\n      if(params['loginFirst']){\n        this.message = \"Для начала войдите в аккаунт\"\n      }\n    })\n\n  }\n\n\n  signUp(){\n    this.authService.signUp(this.email, this.password)\n  }\n  \n  signIn(email?:string, password?:string){\n    if(email && password) {\n      this.password = \"\";\n      this.email = \"\";\n    }\n   this.authService.signIn(this.email || email, this.password || password)\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  firebaseConfig:{\n    apiKey: \"AIzaSyBE106iYnpayy-4deJh3d9DHjeHazCFwY4\",\n    authDomain: \"nti-second.firebaseapp.com\",\n    projectId: \"nti-second\",\n    storageBucket: \"nti-second.appspot.com\",\n    messagingSenderId: \"996644570789\",\n    appId: \"1:996644570789:web:8470e2e03c14cf22f36f4c\"\n  }\n  // firebaseConfig:{\n  //   apiKey: \"***************************\",\n  //   authDomain: \"***********************\",\n  //   projectId: \"**************\",\n  //   storageBucket: \"*********************\",\n  //   messagingSenderId: \"***************\",\n  //   appId: \"*****************\"\n  // }\n};","import { Component } from '@angular/core';\nimport { AuthService } from './services/auth.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'nti-second';\n  constructor(public authService:AuthService){}\n  logout(){\n    this.authService.logout();\n  }\n}\n","\r\n<router-outlet></router-outlet>\r\n<simple-notifications></simple-notifications>","import { LOCALE_ID, NgModule } from '@angular/core';\nimport { AngularFireModule } from '@angular/fire';\nimport {AngularFirestoreModule } from '@angular/fire/firestore'\nimport { BrowserModule } from '@angular/platform-browser';\nimport { environment } from 'src/environments/environment';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { LoginFormComponent } from './login-form/login-form.component';\n\nimport { FormsModule } from '@angular/forms';\nimport { AuthGuard, isEmployer, LoginRedirect } from './auth.guard';\nimport { PageNotFoundComponent } from './page-not-found/page-not-found.component';\n\n//уведомления\nimport { SimpleNotificationsModule } from 'angular2-notifications';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations'\n\nimport { registerLocaleData } from '@angular/common';\nimport localeRu from '@angular/common/locales/ru';\n\nregisterLocaleData(localeRu, 'ru');\n\n@NgModule({\n  declarations: [\n    AppComponent,\n\n    LoginFormComponent,\n\n    PageNotFoundComponent,\n\n\n  ],\n  imports: [\n    FormsModule,\n\n    BrowserModule,\n    AppRoutingModule,\n    AngularFireModule.initializeApp(environment.firebaseConfig),\n    AngularFirestoreModule,\n    BrowserAnimationsModule, \n    SimpleNotificationsModule.forRoot()\n\n  ],\n  exports:[\n  ],\n  providers: [AuthGuard, LoginRedirect, isEmployer,     { provide: LOCALE_ID, useValue: 'ru' }\n],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { AngularFireAuth } from '@angular/fire/auth';\nimport { AngularFirestore } from '@angular/fire/firestore';\nimport { Router } from '@angular/router';\nimport { User } from '../models/user';\nimport { AlertService } from './alert.service';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  constructor(private auth:AngularFireAuth, private afs:AngularFirestore, private router: Router, private alert:AlertService) { }\n\n  _role:string;\n\n  get userRole(){\n    this._role = localStorage.getItem('role')\n    return this._role;\n  }\n\n  get isAuth(){\n    if(JSON.parse(localStorage.getItem('user'))) return true;\n    else return false\n  }\n\n  authState = this.auth.authState.subscribe(user=>{\n    if(user===null){\n      this._role = \"\";\n    } else{\n      localStorage.setItem(\"user\", JSON.stringify(user))\n    }\n  })\n\n  signUp(email, password) {\n    this.auth.createUserWithEmailAndPassword(email, password).then(responseUser => {\n      return this.afs.collection(\"users\").doc(responseUser.user.uid).set({\n        email: responseUser.user.email,\n        id: responseUser.user.uid,\n        orders: [],\n        role: \"Клиент\"\n      }).then(()=>{\n        localStorage.setItem('role', \"Клиент\")\n        this.router.navigate(['/user/user-dashboard'])\n        this.alert.success(\"Вы зарегистрировались\");\n      })\n    }, err=>{\n      switch (err.code) {\n        case 'auth/invalid-email':\n          this.alert.error(\"Неверный email\");\n        break;\n        case 'auth/email-already-in-use':\n          this.alert.error(\"Такой Email уже используется\");\n          break;\n        case \"auth/weak-password\":\n          this.alert.error(\"Слабый пароль\");\n          break;\n      }\n    })\n  }\n\n  signIn(email, password) {\n    this.auth.signInWithEmailAndPassword(email, password).then((responseUser) => {\n      const docRef = this.afs.collection('users').doc(responseUser.user.uid).get()\n      docRef.subscribe(data=>{\n        let user = data.data() as User;\n        localStorage.setItem('role', user.role)\n        if (user.role == 'Клиент'){\n          this.router.navigate(['/user/user-dashboard'])\n        } else {\n          this.router.navigate(['/admin'])\n        }\n        this.alert.success(\"Вход выполнен\");\n\n      })\n    }, err => {\n      switch (err.code) {\n        case 'auth/invalid-email':\n          this.alert.error(\"Неверный email\");\n        break;\n        case 'auth/user-not-found':\n          this.alert.error(\"не существующий пользователь\");\n          break;\n        case \"auth/wrong-password\":\n          this.alert.error(\"не верный пароль\");\n          break;\n      }\n    })\n  }\n\n  logout(){\n    localStorage.clear();\n    this.auth.signOut();\n    this.router.navigate(['login'])\n  }\n\n}","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-page-not-found',\n  templateUrl: './page-not-found.component.html',\n  styleUrls: ['./page-not-found.component.css']\n})\nexport class PageNotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<h1 class=\"text-center mt-5\">\n    Такой страницы нет. Видимо, вы ошиблись адресом :) <br>\n    <a href=\"/login\">Вернуться на правильный путь</a>\n</h1>\n","import {    Injectable  } from '@angular/core';\r\nimport {    Router,    CanActivate,    ActivatedRouteSnapshot,    RouterStateSnapshot,  } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { AuthService } from './services/auth.service';\r\n\r\n  @Injectable()\r\n  export class AuthGuard implements CanActivate {\r\n\r\n    constructor(\r\n      private authService: AuthService,\r\n      public router: Router\r\n    ) {}\r\n\r\n    canActivate(\r\n      next: ActivatedRouteSnapshot,\r\n      state: RouterStateSnapshot): Observable < boolean > | Promise < boolean > | boolean {\r\n\r\n      if (this.authService.isAuth && this.authService.userRole == \"Клиент\") {\r\n        return true\r\n      }\r\n      if (this.authService.isAuth && this.authService.userRole !== \"Клиент\") {\r\n        console.log(this.authService.userRole);\r\n        \r\n        this.router.navigate(['/admin'])\r\n        return false\r\n      }\r\n      this.router.navigate(['login'], {\r\n        queryParams: {\r\n          loginFirst: true\r\n        }\r\n      })\r\n      return false;\r\n    }\r\n  }\r\n\r\n\r\n  @Injectable()\r\n  export class LoginRedirect implements CanActivate {\r\n\r\n    constructor(\r\n      private authService: AuthService,\r\n      public router: Router\r\n    ) {}\r\n\r\n    canActivate(\r\n      next: ActivatedRouteSnapshot,\r\n      state: RouterStateSnapshot): Observable < boolean > | Promise < boolean > | boolean {\r\n      if (this.authService.isAuth == true && state.url == '/login') {\r\n        this.router.navigate(['/user/user-dashboard'])\r\n        return false\r\n      }\r\n      return true\r\n    }\r\n\r\n  }\r\n\r\n\r\n  @Injectable()\r\n  export class isEmployer implements CanActivate {\r\n\r\n    constructor(\r\n      private authService: AuthService,\r\n      public router: Router\r\n    ) {}\r\n\r\n    canActivate(\r\n      next: ActivatedRouteSnapshot,\r\n      state: RouterStateSnapshot): Observable < boolean > | Promise < boolean > | boolean {\r\n       let role = localStorage.getItem('role');\r\n      if (role!==\"Клиент\" && this.authService.isAuth == true) {\r\n        return true\r\n      }\r\n      this.router.navigate(['/login'])\r\n      return false\r\n    }\r\n\r\n  }\r\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AuthGuard, LoginRedirect } from './auth.guard';\nimport { LoginFormComponent } from './login-form/login-form.component';\nimport { PageNotFoundComponent } from './page-not-found/page-not-found.component';\n\n\nconst routes: Routes = [\n  { path: 'login', component:LoginFormComponent, canActivate:[LoginRedirect]},\n  { path: '', redirectTo: 'user/user-dashboard', pathMatch: 'full' },\n\n  {\n    path: 'user', loadChildren:() => import('./user/user.module').then(m => m.UserModule)\n  },\n{\n  path: 'admin', loadChildren:() => import('./admin/admin.module').then(m => m.AdminModule)\n},\n{path: '**', component: PageNotFoundComponent}\n  \n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}