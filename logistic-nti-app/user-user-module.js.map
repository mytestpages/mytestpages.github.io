{"version":3,"sources":["./src/app/user/user.module.ts","./src/app/user/place-order/place-order.component.ts","./src/app/user/place-order/place-order.component.html","./src/app/user/user-routing.module.ts","./src/app/user/user-layout/user-layout.component.html","./src/app/user/user-layout/user-layout.component.ts","./src/app/user/order-info/order-info.component.html","./src/app/user/order-info/order-info.component.ts","./src/app/user/user-dashboard/user-dashboard.component.html","./src/app/user/user-dashboard/user-dashboard.component.ts","./src/app/user/orders-list/orders-list.component.html","./src/app/user/orders-list/orders-list.component.ts"],"names":[],"mappings":"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","file":"user-user-module.js","sourcesContent":["\r\nimport { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { OrderInfoComponent } from './order-info/order-info.component';\r\nimport { OrdersListComponent } from './orders-list/orders-list.component';\r\nimport { PlaceOrderComponent } from './place-order/place-order.component';\r\nimport { UserDashboardComponent } from './user-dashboard/user-dashboard.component';\r\nimport { UserLayoutComponent } from './user-layout/user-layout.component';\r\nimport { UserRoutingModule } from './user-routing.module';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    UserLayoutComponent,\r\n    UserDashboardComponent,\r\n    PlaceOrderComponent,\r\n    OrdersListComponent,\r\n    OrderInfoComponent,\r\n  ],\r\n  imports: [\r\n    FormsModule,\r\n    UserRoutingModule,\r\n    CommonModule\r\n\r\n  ],\r\n  providers: [],\r\n  bootstrap: []\r\n})\r\nexport class UserModule { }\r\n","import { Component, OnInit } from '@angular/core';\nimport { Order } from '../../models/order';\nimport { User } from '../../models/user';\nimport { AuthService } from '../../services/auth.service';\nimport { OrderService } from '../../services/order.service';\n\n@Component({\n  selector: 'app-place-order',\n  templateUrl: './place-order.component.html',\n  styleUrls: ['./place-order.component.css']\n})\n\nexport class PlaceOrderComponent implements OnInit {\n\n  customer_name: string;\n  customer_lastname: string;\n  recipient_name: string;\n  recipient_lastname: string;\n  start: string;\n  end: string;\n  description: string;\n\n  constructor(private authService: AuthService, private orderService: OrderService) {}\n  data: any;\n\n  ngOnInit(): void {\n    this.data = JSON.parse(localStorage.getItem('user'))\n  }\n\n  submitForm() {\n    let order: Order = {\n      customer_name: this.customer_name,\n      customer_lastname: this.customer_lastname,\n      recipient_name: this.recipient_name,\n      recipient_lastname: this.recipient_lastname,\n      start: this.start,\n      end: this.end,\n      description: this.description,\n      date: new Date(),\n      status: \"Новый\",\n      user: {\n        email: this.data.email,\n        uid: this.data.uid\n      }\n    }\n    this.orderService.placeOrder(order)\n  }\n\n}\n","  <h3 class=\"mb-5\">Оформить заявку на доставку</h3>\n  <div class=\"row\">\n    <div class=\"form-group col\">\n      <label for=\"customer_name\">Имя отправителя</label>\n      <input [(ngModel)]=\"this.customer_name\" type=\"text\" class=\"form-control\" id=\"customer_name\" name=\"customer_name\"\n        #start_name=\"ngModel\" required />\n      <small [hidden]=\"start_name.valid || start_name.untouched\">\n        Введите имя отправителя\n      </small>\n    </div>\n    <div class=\"form-group col\">\n      <label for=\"customer_lastname\">Фамилия отправителя</label>\n      <input [(ngModel)]=\"this.customer_lastname\" type=\"text\" class=\"form-control\" id=\"customer_lastname\"\n        name=\"customer_lastname\" #start_lastname=\"ngModel\" required />\n      <small [hidden]=\"start_lastname.valid || start_lastname.untouched\">\n        Введите фамилию отправителя\n      </small>\n    </div>\n  </div>\n  <div class=\"row\">\n    <div class=\"form-group col\">\n      <label for=\"customer_name\">Имя получателя</label>\n      <input [(ngModel)]=\"this.recipient_name\" type=\"text\" class=\"form-control\" id=\"recipient_name\"\n        name=\"recipient_name\" #end_name=\"ngModel\" required />\n      <small [hidden]=\"end_name.valid || end_name.untouched\">\n        Введите имя получателя\n      </small>\n    </div>\n    <div class=\"form-group col\">\n      <label for=\"customer_lastname\">Фамилия получателя</label>\n      <input [(ngModel)]=\"this.recipient_lastname\" type=\"text\" class=\"form-control\" id=\"recipient_lastname\"\n        name=\"recipient_lastname\" #end_lastname=\"ngModel\" required />\n      <small [hidden]=\"end_lastname.valid || end_lastname.untouched\">\n        Введите фамилию получателя\n      </small>\n    </div>\n  </div>\n  <div class=\"row\">\n    <div class=\"form-group col\">\n      <label for=\"customer_start\">Адрес отправления</label>\n      <input [(ngModel)]=\"this.start\" type=\"text\" class=\"form-control\" id=\"customer_start\" name=\"start\"\n        #start_point=\"ngModel\" required />\n      <small [hidden]=\"start_point.valid || start_point.untouched\">\n        Введите адрес отправления\n      </small>\n    </div>\n    <div class=\"form-group col\">\n      <label for=\"customer_end\">Адрес получения</label>\n      <input [(ngModel)]=\"this.end\" type=\"text\" class=\"form-control\" id=\"customer_end\" name=\"end\" #end_point=\"ngModel\"\n        required />\n      <small [hidden]=\"end_point.valid || end_point.untouched\">\n        Введите адрес получения\n      </small>\n    </div>\n  </div>\n  <div class=\"form-group\">\n    <label for=\"type\">Содержимое посылки</label>\n    <input [(ngModel)]=\"this.description\" type=\"text\" class=\"form-control\" id=\"type\" name=\"type\" #item_about=\"ngModel\"\n      required />\n    <small [hidden]=\"item_about.valid || item_about.untouched\">\n      Введите данные по посылке\n    </small>\n  </div>\n\n  <button [disabled]=\"item_about.invalid \n  || end_point.invalid \n  || start_point.invalid \n  || start_name.invalid \n  || start_lastname.invalid \n  || end_name.invalid \n  || end_lastname.invalid \" type=\"submit\" (click)=\"submitForm()\" class=\"btn btn-primary\">\n    Оформить\n  </button>\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { AuthGuard, LoginRedirect } from '../auth.guard';\r\nimport { PageNotFoundComponent } from '../page-not-found/page-not-found.component';\r\n// import { LoginFormComponent } from '../login-form/login-form.component';\r\nimport { OrderInfoComponent } from './order-info/order-info.component';\r\nimport { OrdersListComponent } from './orders-list/orders-list.component';\r\nimport { PlaceOrderComponent } from './place-order/place-order.component';\r\nimport { UserDashboardComponent } from './user-dashboard/user-dashboard.component';\r\nimport { UserLayoutComponent } from './user-layout/user-layout.component';\r\n\r\nconst routes: Routes = [\r\n    { path: '', component: UserLayoutComponent, children: [\r\n      { path: '', redirectTo: 'user/user-dashboard', pathMatch: 'full' },\r\n      { path: 'user-dashboard', component: UserDashboardComponent, canActivate:[AuthGuard] },\r\n      { path: 'place-order', component: PlaceOrderComponent, canActivate:[AuthGuard] },\r\n      { path: 'my-orders', component: OrdersListComponent, canActivate:[AuthGuard] },\r\n      { path: 'my-orders/order/:id', component: OrderInfoComponent, canActivate:[AuthGuard] },\r\n      {path: '**', component: PageNotFoundComponent}\r\n\r\n    ] \r\n  },\r\n  \r\n  ];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class UserRoutingModule { }\r\n","<nav class=\"navbar navbar-dark bg-dark navbar-expand-lg\">\n  <div class=\"container\">\n    <a class=\"navbar-brand\" routerLink=\"\">MS Logistics | Пользователь</a>\n    <ul class=\"navbar-nav \">\n      <li class=\"nav-item\" *ngIf=\"this.authService.isAuth \">\n        <a ngif class=\"nav-link\" routerLinkActive=\"active\" routerLink=\"place-order\">Разметить заказ на доставку</a>\n      </li>\n      <li class=\"nav-item\" *ngIf=\"this.authService.isAuth \">\n        <a ngif class=\"nav-link\" routerLinkActive=\"active\" routerLink=\"user-dashboard\">Мой Аккаунт</a>\n      </li>\n      <li class=\"nav-item\" *ngIf=\"this.authService.isAuth\">\n        <a ngif class=\"nav-link\" routerLinkActive=\"active\" routerLink=\"my-orders\">Мои заказы</a>\n      </li>\n      <li class=\"nav-item\" *ngIf=\"!this.authService.isAuth\">\n        <a ngif class=\"nav-link\" routerLinkActive=\"active\" routerLink=\"login\">Войти в аккаунт</a>\n      </li>\n\n    </ul>\n    <li class=\"nav-item ml-auto\" *ngIf=\"this.authService.isAuth\">\n      <button (click)=\"logout()\" class=\"btn btn-danger\">Выйти</button>\n    </li>\n  </div>\n</nav>\n\n<div class=\"container\">\n  <div class=\"wrapper\">\n    <router-outlet></router-outlet>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../services/auth.service';\n\n@Component({\n  selector: 'app-user-layout',\n  templateUrl: './user-layout.component.html',\n  styleUrls: ['./user-layout.component.css']\n})\nexport class UserLayoutComponent implements OnInit {\n\n  constructor(public authService:AuthService) { }\n\n  ngOnInit(): void {\n  }\n\n\n  logout(){\n    this.authService.logout();\n  }\n\n}\n","<h3 class=\"text-center\">Подробности заказа №{{this.id}}</h3>\n\n<div *ngIf=\"order\" class=\"text-center\">\n  <p><b>Дата оформления: </b>{{order.order.date.seconds*1000  | date:'longDate':'ru_RU'}}</p>\n  <p> <b> Имя отправителя: </b>{{order.order.customer_name}}</p>\n  <p><b> Фамилия отправителя:</b> {{order.order.customer_lastname}}</p>\n  <p><b> Имя получателя:</b> {{order.order.recipient_name}}</p>\n  <p><b> Фамилия получателя:</b> {{order.order.recipient_lastname}}</p>\n  <p> <b>Адрес отправления:</b> {{order.order.start}}</p>\n  <p> <b>Адрес получения:</b> {{order.order.end}}</p>\n  <p> <b> Содержимое посылки: </b>{{order.order.description}}</p>\n  <h5>\n    <p> <b> Статус заказа:</b> {{order.order.status}} </p>\n  </h5>\n\n  <div class=\"row mt-4\">\n    <div class=\"col\">\n      <button class=\"btn btn-primary\" (click)=\"goBack()\">Назад</button>\n    </div>\n    <div class=\"col\">\n      <button [disabled]=\"order.order.status!=='Новый' || order.order.status=='Отменен'\" class=\"btn btn-warning\"\n        (click)=\"changeOrderStatus('Отменен')\">Отменить заказ</button>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { OrderService } from '../../services/order.service';\nimport { Location } from '@angular/common';\n\n\n@Component({\n  selector: 'app-order-info',\n  templateUrl: './order-info.component.html',\n  styleUrls: ['./order-info.component.css']\n})\nexport class OrderInfoComponent implements OnInit {\n\n  constructor(private orderService:OrderService, private activatedRoute: ActivatedRoute, private location:Location) { }\n\n  order:any;\n  id:string;\n\n  ngOnInit(): void {\n    this.getItem()\n  }\n\n  getItem(){\n    this.id = this.activatedRoute.snapshot.params['id'];\n    this.orderService.getOrderById(this.id).subscribe(item => {\n      this.order = item;\n    })\n  }\n\n\n  goBack():void{\n    this.location.back();\n  }\n\n  changeOrderStatus(status:string){\n    console.log(status);\n    \n    this.orderService.changeOrderStatus(this.id, status)\n  }\n\n}\n","\n<div *ngIf=\"this.userData\">\n<h3>Данные аккаунта</h3>\n    <b> ID пользователя: </b>{{this.userData.uid}}<br>\n    <b> Email пользователя:</b> {{this.userData.email}} <br>\n\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../services/auth.service';\n\n@Component({\n  selector: 'app-user-dashboard',\n  templateUrl: './user-dashboard.component.html',\n  styleUrls: ['./user-dashboard.component.css']\n})\nexport class UserDashboardComponent implements OnInit {\n\n  constructor() { }\n  userData:any;\n  ngOnInit(): void {\n    this.userData = JSON.parse(localStorage.getItem('user'));\n  }\n\n}\n","<ul>\n  <h3 class=\"mb-2\">Мои заказы</h3>\n\n  <div *ngIf=\"ordersId; else loading\">\n    <div *ngIf=\"ordersId.length;else empty\">\n      <li style=\"font-size: 18px;\" class=\"text-left mb-1\" *ngFor=\"let order of ordersId\">\n        Заказ<a (click)=\"openItem(order)\">\n          №{{order}}\n        </a>\n      </li>\n    </div>\n  </div>\n</ul>\n\n<ng-template #loading> Загрузка...</ng-template>\n<ng-template #empty> Вы еще не заказывали доставки </ng-template>\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Order } from '../../models/order';\nimport { AuthService } from '../../services/auth.service';\nimport { OrderService } from '../../services/order.service';\n\n@Component({\n  selector: 'app-orders-list',\n  templateUrl: './orders-list.component.html',\n  styleUrls: ['./orders-list.component.css']\n})\nexport class OrdersListComponent implements OnInit {\n\n  constructor(private orderService:OrderService, private authServices:AuthService, private router:Router) { }\n\n  ordersId:any[];\n\n  ngOnInit(): void {\n    const data = JSON.parse(localStorage.getItem('user'))\n    const id = data.uid;\n    this.getOrders(id);\n  }\n\n  getOrders(id) {\n    this.orderService.getUserOrdersList(id).subscribe(data => {\n      this.ordersId = data.orders\n    })\n  }\n\n  openItem(orderId){\n    this.router.navigate([`user/my-orders/order/${orderId}`]);\n  }\n\n  }\n"],"sourceRoot":"webpack:///"}