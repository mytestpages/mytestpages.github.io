{"version":3,"sources":["Todo/TodoList/TodoItem/TodoItem.module.css","Todo/TodoInput/TodoInput.module.css","Todo/TodoList/TodoList.module.css","Todo/Todo.module.css","context.js","Todo/TodoList/TodoItem/TodoItem.jsx","Todo/TodoList/TodoList.jsx","Todo/TodoInput/TodoInput.jsx","Todo/Todo.jsx","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Context","React","createContext","TodoItem","props","removeTodo","useContext","classes","data","completed","push","className","s","todoItem","container","type","checked","onChange","onToggle","id","checkmark","todoText","join","title","removeBtn","onClick","TodoList","todos","length","loading","todosElements","map","t","todoList","TodoInput","useState","value","setValue","$event","target","todoInput","placeholder","addTodo","btn","Todo","todoUi","App","setTodos","setLoading","useEffect","JSON","parse","localStorage","getItem","setItem","stringify","Provider","filter","todo","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ac117bbd.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"todoItem\":\"TodoItem_todoItem__1IYSI\",\"container\":\"TodoItem_container__2fr4w\",\"checkmark\":\"TodoItem_checkmark__qvBAT\",\"todoText\":\"TodoItem_todoText__173l-\",\"removeBtn\":\"TodoItem_removeBtn__1MRoA\",\"done\":\"TodoItem_done__1Acv0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"todoInput\":\"TodoInput_todoInput__2OG03\",\"btn\":\"TodoInput_btn__2UxIE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"todoList\":\"TodoList_todoList__281eO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"todoUi\":\"Todo_todoUi__2SQYx\"};","import React from 'react'\r\n\r\nconst Context = React.createContext();\r\n\r\nexport default Context;","import React, { useContext } from \"react\";\r\nimport s from \"./TodoItem.module.css\";\r\nimport Context from \"../../../context\";\r\n\r\nconst TodoItem = (props) => {\r\n  const { removeTodo } = useContext(Context);\r\n\r\n  const classes = [];\r\n  if (props.data.completed) {\r\n    classes.push(\"done\");\r\n  }\r\n\r\n  const onCompletedChange = () => {\r\n    props.onToggle(props.data.id);\r\n  };\r\n\r\n  const onClickDeleteTodo = () => {\r\n    removeTodo(props.data.id);\r\n  };\r\n\r\n  return (\r\n    <li className={s.todoItem}>\r\n      <label className={s.container}>\r\n        <input\r\n          type=\"checkbox\"\r\n          checked={props.data.completed}\r\n          onChange={onCompletedChange}\r\n        />\r\n        <span className={s.checkmark}></span>\r\n      </label>\r\n      <span className={s.todoText + \" \" + s[classes.join(\" \")]}>\r\n        {props.data.title}\r\n      </span>\r\n      <button className={s.removeBtn} onClick={onClickDeleteTodo}>\r\n        &times;\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default TodoItem;\r\n","import React from \"react\";\r\nimport TodoItem from \"./TodoItem/TodoItem\";\r\nimport s from \"./TodoList.module.css\";\r\n\r\nconst TodoList = (props) => {\r\n  if (props.todos.length == [] && !props.loading) {\r\n    return <p>Nothing to do...</p>;\r\n  } else if (props.loading) {\r\n    return <p>Loading todos...</p>;\r\n  }\r\n  let todosElements = props.todos.map((t) => {\r\n    return <TodoItem key={t.id} data={t} onToggle={props.onToggle} />;\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <ul className={s.todoList}>\r\n        <h3>Your Tasks</h3>\r\n        {todosElements}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TodoList;\r\n","import React, { useEffect } from \"react\";\r\nimport s from \"./TodoInput.module.css\";\r\n\r\nconst TodoInput = (props) => {\r\n  const [value, setValue] = React.useState(\"\");\r\n  \r\n  const onAddButtonClick = () => {\r\n    props.addTodo(value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <input\r\n        value={value}\r\n        onChange={($event) => setValue($event.target.value)}\r\n        className={s.todoInput}\r\n        type=\"text\"\r\n        placeholder=\"Add a task...\"\r\n      />\r\n      <button onClick={onAddButtonClick} className={s.btn}>\r\n        Add\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TodoInput;\r\n","import TodoList from \"./TodoList/TodoList\";\r\nimport TodoInput from \"./TodoInput/TodoInput\";\r\nimport s from \"./Todo.module.css\";\r\n\r\nconst Todo = (props) => {\r\n  return (\r\n    <div className={s.todoUi}>\r\n      <h1>Todo React App</h1>\r\n      <TodoInput addTodo={props.addTodo} />\r\n      <TodoList loading={props.loading} todos={props.todos} onToggle={props.onToggle}/>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Todo;\r\n","import \"./App.css\";\nimport Todo from \"./Todo/Todo\";\nimport React, { useEffect } from \"react\";\nimport Context from \"./context\";\n\nconst App = () => {\n  const [todos, setTodos] = React.useState([]);\n  const [loading, setLoading] = React.useState(true);\n\n  useEffect(() => {\n    setTodos(JSON.parse(localStorage.getItem(\"todos\")) || []);\n    setLoading(false);\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem(\"todos\", JSON.stringify(todos));\n  }, [todos]);\n\n  const onCompletedChange = (id) => {\n    setTodos(\n      todos.map((t) => {\n        if (t.id === id) {\n          t.completed = !t.completed;\n        }\n        return t;\n      })\n    );\n  };\n\n  const addTodo = (todoText) => {\n    let todo = {\n      id: todos.length + 1,\n      completed: false,\n      title: todoText,\n    };\n    setTodos([todo, ...todos]);\n  };\n\n  const removeTodo = (id) => {\n    setTodos(todos.filter((t) => t.id !== id));\n  };\n  return (\n    <Context.Provider value={{ removeTodo }}>\n      <div className=\"App\">\n        <Todo\n          loading={loading}\n          todos={todos}\n          onToggle={onCompletedChange}\n          addTodo={addTodo}\n        />\n      </div>\n    </Context.Provider>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}